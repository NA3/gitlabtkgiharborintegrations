#added before-script to change working directory
before_script:
  - cd $CI_PROJECT_DIR/qrcode
  
stages:
  - test
  - build
  - docker-build
  - deploy

#Test stage 
unit test:
  stage: test
  script:
    - echo "Unit Test scripts should go here.."
  
#build stage
maven-build:
  stage: build
  image: maven:latest
  script:
    - mvn package
#docker-build stage
docker build push:
  stage: docker-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    #- echo $CI_REGISTRY_CA_CERT
    - echo "-------------------------------------------------------------------"
    - echo "${CI_REGISTRY_CA_CERT}" > /kaniko/ssl/certs/jis-certificates.crt
    - echo "Copied Harbor Registry CERT into /kaniko/ssl/certs/jis-certificates.crt:"
    - echo "-------------------------------------------------------------------"
    - cat /kaniko/ssl/certs/jis-certificates.crt
    - echo "-------------------------------------------------------------------"
    - echo "Project Build Dir:"
    - echo $CI_PROJECT_DIR 
    - echo "Target Harbor reposiory image:"
    - echo $CI_REGISTRY_IMAGE
    - /kaniko/executor --context $CI_PROJECT_DIR/qrcode --dockerfile $CI_PROJECT_DIR/qrcode/Dockerfile --destination ${CI_REGISTRY_IMAGE}:${CI_REGISTRY_TAG_DEV}
    - echo "CI/CD job completed, APP image should be available at:"
    - echo ${CI_REGISTRY_IMAGE}:${CI_REGISTRY_TAG_DEV}
  environment:
    name: development
  #build docker app only when a pipeline on master branch is run
  only:
  - master
  
#deploy stage   
#TODO: try include statement to separate CI from CD:
include: '.gitlab-ci-deploy-dev.yaml'
#then 'deploy to development' can be commented out

    
